<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DC_Available_Algorithm_List" xml:space="preserve">
    <value>사용 가능한 알고리즘 목록</value>
  </data>
  <data name="DC_Checkpoint" xml:space="preserve">
    <value />
  </data>
  <data name="DC_Err_FileNotFound" xml:space="preserve">
    <value>파일을 찾지 못했습니다.</value>
  </data>
  <data name="DC_Err_HeaderVersionNotMatch" xml:space="preserve">
    <value>헤더 버전이 맞지 않습니다.</value>
  </data>
  <data name="DC_Err_IncorrectEncryptedDataChecksum" xml:space="preserve">
    <value>암호화된 데이터의 체크섬이 틀립니다.</value>
  </data>
  <data name="DC_Err_IncorrectHeaderChecksum" xml:space="preserve">
    <value>헤더의 체크섬이 틀립니다.</value>
  </data>
  <data name="DC_Err_IncorrectRawDataChecksum" xml:space="preserve">
    <value>원본 데이터의 체크섬이 틀립니다.</value>
  </data>
  <data name="DC_Err_InvalidAlgorithm" xml:space="preserve">
    <value>유효하지 않은 알고리즘입니다.</value>
  </data>
  <data name="DC_Err_InvalidBufferSize" xml:space="preserve">
    <value>유효하지 않은 버퍼 크기입니다.</value>
  </data>
  <data name="DC_Err_InvalidHeaderClass" xml:space="preserve">
    <value>유효하지 않은 헤더 클래스입니다.</value>
  </data>
  <data name="DC_Err_AccessDenied" xml:space="preserve">
    <value>접근이 거부되었습니다.</value>
  </data>
  <data name="DC_Err_InvalidHeaderFieldValue" xml:space="preserve">
    <value>유효하지 않은 헤더 필드 값입니다.</value>
  </data>
  <data name="DC_Err_InvalidParameter" xml:space="preserve">
    <value>유효하지 않은 매개변수입니다.</value>
  </data>
  <data name="DC_Err_InvalidPasswordOrDataCorrupted" xml:space="preserve">
    <value>유효하지 않은 암호이거나 데이터가 손상되었습니다.</value>
  </data>
  <data name="DC_Err_InvalidSignature" xml:space="preserve">
    <value>유효하지 않은 시그니쳐입니다.</value>
  </data>
  <data name="DC_Err_IOError" xml:space="preserve">
    <value>입출력 오류입니다.</value>
  </data>
  <data name="DC_Err_NoIputFile" xml:space="preserve">
    <value>입력 파일이 없습니다.</value>
  </data>
  <data name="DC_Err_NotSupportedVersion" xml:space="preserve">
    <value>지원하지 않는 버전입니다.</value>
  </data>
  <data name="DC_Err_OutOfMemory" xml:space="preserve">
    <value>메모리가 부족합니다.</value>
  </data>
  <data name="DC_Err_PathTooLong" xml:space="preserve">
    <value>경로가 너무 깁니다.</value>
  </data>
  <data name="DC_Err_StreamReadError" xml:space="preserve">
    <value>스트림 읽기 오류입니다.</value>
  </data>
  <data name="DC_Err_StreamWriteError" xml:space="preserve">
    <value>스트림 쓰기 오류입니다.</value>
  </data>
  <data name="DC_Err_SucceedButCleanupFailed" xml:space="preserve">
    <value>작업은 성공했지만, 입력 파일을 삭제하지 못했습니다.</value>
  </data>
  <data name="DC_Err_Success" xml:space="preserve">
    <value />
  </data>
  <data name="DC_Error_Code" xml:space="preserve">
    <value>오류 코드</value>
  </data>
  <data name="DC_Error_Description" xml:space="preserve">
    <value>오류 내용</value>
  </data>
  <data name="DC_License_Info" xml:space="preserve">
    <value>라이센스 정보</value>
  </data>
  <data name="DC_Option_Algorithm" xml:space="preserve">
    <value>사용할 알고리즘을 설정합니다.</value>
  </data>
  <data name="DC_Err_AmbiguousOption" xml:space="preserve">
    <value>모호한 옵션입니다.</value>
  </data>
  <data name="DC_Option_BufferSize" xml:space="preserve">
    <value>작업에 사용될 버퍼의 크기를 설정합니다. (기본 값은 4096 입니다)</value>
  </data>
  <data name="DC_Option_Cleanup" xml:space="preserve">
    <value>작업이 성공하면 입력 파일을 삭제합니다.</value>
  </data>
  <data name="DC_Option_Comment" xml:space="preserve">
    <value>파일에 대한 코멘트를 설정합니다.</value>
  </data>
  <data name="DC_Option_Decrypt" xml:space="preserve">
    <value>암호화된 파일을 복호화합니다.</value>
  </data>
  <data name="DC_Option_DisableVerification" xml:space="preserve">
    <value>체크섬 검증을 비활성화합니다.</value>
  </data>
  <data name="DC_Option_HeaderVersion" xml:space="preserve">
    <value>헤더의 버전을 설정합니다.</value>
  </data>
  <data name="DC_Option_IV" xml:space="preserve">
    <value>* 초기 벡터(IV)를 설정합니다.</value>
  </data>
  <data name="DC_Option_Out" xml:space="preserve">
    <value>출력 파일의 이름을 설정합니다.</value>
  </data>
  <data name="DC_Option_Overwrite" xml:space="preserve">
    <value>출력 파일을 덮어쓰도록 설정합니다.</value>
  </data>
  <data name="DC_Option_Password" xml:space="preserve">
    <value>* 암호를 설정합니다.</value>
  </data>
  <data name="DC_Option_RunTest" xml:space="preserve">
    <value>파일에 대한 기능 시험을 수행합니다.</value>
  </data>
  <data name="DC_Option_ShowAlgorithmList" xml:space="preserve">
    <value>사용할 수 있는 알고리즘 목록을 표시합니다.</value>
  </data>
  <data name="DC_Option_ShowHeaderInfo" xml:space="preserve">
    <value>파일의 헤더 정보를 표시합니다. (암호화된 파일에만 사용 가능)</value>
  </data>
  <data name="DC_Option_ShowVersion" xml:space="preserve">
    <value>버전 및 라이센스 정보를 표시합니다.</value>
  </data>
  <data name="DC_Option_Usage" xml:space="preserve">
    <value>도움말을 표시합니다.</value>
  </data>
  <data name="DC_Option_Verbose" xml:space="preserve">
    <value>진행 상태를 자세히 출력합니다.</value>
  </data>
  <data name="DC_PerformanceLogging_Start" xml:space="preserve">
    <value>성능 기록을 시작합니다.</value>
  </data>
  <data name="DC_PerformanceLogging_Ended" xml:space="preserve">
    <value>성능 기록이 종료되었습니다.</value>
  </data>
  <data name="DC_Used_Library" xml:space="preserve">
    <value>사용된 라이브러리</value>
  </data>
  <data name="DC_Err_DirectoryNotFound" xml:space="preserve">
    <value>디렉터리를 찾지 못했습니다.</value>
  </data>
  <data name="DC_Err_EncodingError" xml:space="preserve">
    <value>인코딩 오류입니다.</value>
  </data>
  <data name="DC_Err_ErrorCausedUDPR" xml:space="preserve">
    <value>사용자 정의 처리 루틴에서 오류가 발생했습니다.</value>
  </data>
  <data name="DC_Err_FileAlreadyExists" xml:space="preserve">
    <value>파일이 이미 존재합니다.</value>
  </data>
  <data name="DC_File" xml:space="preserve">
    <value>파일</value>
  </data>
  <data name="DC_Option" xml:space="preserve">
    <value>옵션</value>
  </data>
  <data name="DC_Usage" xml:space="preserve">
    <value>사용법</value>
  </data>
  <data name="DC_Keys_Description" xml:space="preserve">
    <value>* 파일을 우선적으로 찾고, 파일이 없을 경우 문자열 자체를 키(또는 IV)로 사용합니다. 단, 문자열이 {0} 또는 {1} 으로 시작하는 경우 해당 규칙에 맞게 사용합니다. {0} 의 경우 문자열 자체를 키(또는 IV)로 사용하고, {1} 의 경우 파일의 내용을 사용합니다. ({1} 의 경우엔, 파일이 존재하지 않거나 접근이 거부되면 오류가 발생합니다)</value>
  </data>
  <data name="DC_PerformanceLogging_Aborted" xml:space="preserve">
    <value>오류로 인해 성능 기록이 중단되었습니다. ({0}: {1})</value>
  </data>
  <data name="DC_PerformanceLogging_Checkpoint_Created" xml:space="preserve">
    <value>[{0}] '{1}' - 체크포인트 생성됨.</value>
  </data>
  <data name="DC_PerformanceLogging_Checkpoint_Finished" xml:space="preserve">
    <value>[{0}] '{1}' - 체크포인트 종료됨. ({2}: {3}, {4}: {5})</value>
  </data>
  <data name="DC_PerformanceLogging_ElapsedTime" xml:space="preserve">
    <value>시간</value>
  </data>
  <data name="DC_PerformanceLogging_None" xml:space="preserve">
    <value>없음</value>
  </data>
  <data name="DC_PerformanceLogging_Speed" xml:space="preserve">
    <value>속도</value>
  </data>
  <data name="DC_PerformanceLogging_Error" xml:space="preserve">
    <value>오류</value>
  </data>
</root>